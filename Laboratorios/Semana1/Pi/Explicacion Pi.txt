El programa PiPorSeries tiene un problema de "cooperación", ya que luego de culminar su ejecución, este no almacena los datos proporcionados por todos sus procesos.
En este código, al invocar al proceso fork() se crea un proceso hijo sumamente similar al padre (sin embargo,su id es distinto) para que este realice el calculo de pi con los términos que le corresponden (se le da un inicio y un fin). Se debe tener en cuenta que el vector donde debe almacenar el calculo también "se le proporciona". El proceso SÍ realiza la operación que se espera y guarda el calculo en la posición del vector que le corresponde. 
Ahora, ese es el trabajo de UN proceso, pero no es solo él, son DIEZ. Así que básicamente se le está proporcionando un vector para guardar los datos a CADA UNO de los procesos que se están manejando, y estos simultaneamente deben utilizarlo. Esto no sucede, el vector que se les proporciona no es de uso "común", es un vector que cada uno utiliza internamente, es como una variable privada.
Cada proceso posee su inicio, su fin y su vector donde almacenar el resultado. Por esta razón, cuando el proceso "muere" (exit) se lleva consigo a su vector con la suma almacenada. Para evitar esto, lo correcto sería devolver el resultado obtenido y así el proceso "master" almacena cada resultado, de cada proceso, en el vector "global". Pero hay un problema, el proceso no puede retornar el resultado, ya que no habría forma de eliminarlo luego, y seguiría repitiendose una y otra vez.
Para evitar todo este problema, se necesita una comunicación entre los procesos, algo como un Semáforo.

PD: el código de PiPorSeries está modificado (intentando comprobar la solución dicha anteriormente, el retorno), por esta razón el programa
se repite varias veces hasta finalizar.